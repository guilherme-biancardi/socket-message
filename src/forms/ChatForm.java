/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import aps.Colors;
import enums.PageEnum;
import aps.Pages;
import aps.User;
import components.MessageComponentInterface;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import components.ScrollBarCustom;
import controllers.ChatController;
import exceptions.ServerErrorException;
import java.awt.Component;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JScrollBar;

/**
 *
 * @author guilh
 */
public class ChatForm extends javax.swing.JFrame implements ChatFormInterface {

    private final User user;
    private final JScrollBar scrollbar;
    private final ChatController chatController;

    /**
     * Creates new form ChatForm
     *
     * @param user
     * @throws java.io.IOException
     * @throws java.sql.SQLException
     */
    public ChatForm(User user) throws IOException, SQLException {
        this.user = user;

        initComponents();

        this.scrollbar = scroll.getVerticalScrollBar();
        scrollbar.setValue(scrollbar.getMaximum());

        this.chatController = new ChatController(user, this);

        scroll.getViewport().setBackground(Colors.getLightLightness());
    }

    @Override
    public void sendMessage() {
        String text = message.getText();

        if (text.length() > 0) {

            chatController.sendMessage(text);

        } else {
            Toolkit.getDefaultToolkit().beep(); // Emitindo um som de aviso
        }
    }

    @Override
    public void rendererMessage(MessageComponentInterface component) {

        // Criando um Box com orientação vertical
        Box box = Box.createVerticalBox();

        box.add((Component) component);
        box.add(Box.createVerticalStrut(component.getGap()));

        messageContent.add(box);

        if (scrollbar.getMaximum() < scrollbar.getVisibleAmount()) {
            scrollbar.setValue(scrollbar.getMaximum());
        } else {
            scrollbar.setValue(scrollbar.getValue() + component.getTotalHeight());
        }

        message.setText("");

        this.revalidate();
    }

    @Override
    public void closeOnError(String message) {
        Pages.removePage(PageEnum.CHAT);

        this.dispose();

        try {
            throw new ServerErrorException(message);
        } catch (ServerErrorException ex) {
        }
    }

    @Override
    public void logout() {
        try {
            chatController.disconnect();
            Pages.redirect(PageEnum.LOGIN, this);
        } catch (ServerErrorException ex) {
            Logger.getLogger(ChatForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        navBar = new javax.swing.JPanel();
        userText = new javax.swing.JPanel();
        userName = new javax.swing.JLabel();
        userName1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        messageBar = new javax.swing.JPanel();
        message = new components.TextFieldComponent(60);
        sendButton = new components.ButtonComponent();
        scroll = new javax.swing.JScrollPane();
        messageContent = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(Colors.getLightLightness());
        jPanel1.setBorder(navBar.getBorder());

        navBar.setBackground(Colors.getLight());
        navBar.setBorder(new CompoundBorder(new LineBorder(Colors.getLightDarkness(), 1), new EmptyBorder(8, 12, 8, 12))
        );
        navBar.setPreferredSize(new java.awt.Dimension(500, 48));
        navBar.setLayout(new java.awt.GridBagLayout());

        userText.setBackground(Colors.getLight());
        userText.setLayout(new java.awt.GridLayout(2, 0, 0, 2));

        userName.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        userName.setForeground(Colors.getPrimary());
        userName.setText(user.getName());
        userText.add(userName);

        userName1.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        userName1.setForeground(Colors.getText());
        userName1.setText(user.getEmail());
        userText.add(userName1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 2.0;
        navBar.add(userText, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logout.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.setMaximumSize(new java.awt.Dimension(24, 24));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        navBar.add(jButton1, new java.awt.GridBagConstraints());

        messageBar.setBackground(Colors.getLight());
        messageBar.setBorder(javax.swing.BorderFactory.createLineBorder(Colors.getLightDarkness()));
        messageBar.setPreferredSize(new java.awt.Dimension(400, 18));
        messageBar.setLayout(new java.awt.GridBagLayout());

        message.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        message.setPreferredSize(new java.awt.Dimension(30, 18));
        message.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                messageKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 306;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 8, 0);
        messageBar.add(message, gridBagConstraints);

        sendButton.setText("Enviar");
        sendButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 37;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 8, 10);
        messageBar.add(sendButton, gridBagConstraints);

        scroll.setBackground(Colors.getLightLightness());
        scroll.setBorder(null);
        scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scroll.setToolTipText("");
        scroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        scroll.setAlignmentX(0.0F);
        scroll.setAutoscrolls(true);
        scroll.setHorizontalScrollBar(null);
        scroll.setPreferredSize(new java.awt.Dimension(100, 50));
        scroll.setVerticalScrollBar(new ScrollBarCustom());

        messageContent.setBackground(Colors.getLightLightness());
        messageContent.setAutoscrolls(true);
        messageContent.setMaximumSize(new java.awt.Dimension(500, 500));
        messageContent.setMinimumSize(new java.awt.Dimension(500, 500));
        messageContent.setOpaque(false);
        messageContent.setLayout(new javax.swing.BoxLayout(messageContent, javax.swing.BoxLayout.PAGE_AXIS));
        scroll.setViewportView(messageContent);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navBar, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addComponent(messageBar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(navBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageBar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(616, 608));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendButtonMouseClicked
        sendMessage();
    }//GEN-LAST:event_sendButtonMouseClicked

    private void messageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_messageKeyPressed
        String keyName = KeyEvent.getKeyText(evt.getKeyCode());

        if ("Enter".equals(keyName)) {
            sendMessage();
        }
    }//GEN-LAST:event_messageKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        logout();
    }//GEN-LAST:event_jButton1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private components.TextFieldComponent message;
    private javax.swing.JPanel messageBar;
    private javax.swing.JPanel messageContent;
    private javax.swing.JPanel navBar;
    private javax.swing.JScrollPane scroll;
    private components.ButtonComponent sendButton;
    private javax.swing.JLabel userName;
    private javax.swing.JLabel userName1;
    private javax.swing.JPanel userText;
    // End of variables declaration//GEN-END:variables

}
